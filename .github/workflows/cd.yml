# Define the workflow name
name: 'Continuous Delivery'

# Specify when the workflow should run: on each push to the "main" branch
on:
  push:
    branches:
      - main

# Define environment variables
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # Retrieved from the GCP_PROJECT_ID secret in GitHub
  SERVICE: challenge-api                      # Name of the Cloud Run service
  REGION: southamerica-west1                  # Cloud Run service region

# Define the jobs to run
jobs:
  deploy:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Authenticate with Google Cloud using the service account key
      - name: Authenticate with Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Step 3: Authenticate with Docker for GCP
      - name: Authenticate Docker with GCP
        run: |-
          gcloud auth configure-docker --quiet

      # Step 4: Build and push the container image to Google Container Registry
      - name: Build and Push Docker Image
        run: |-
          docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest" ./
          docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest"

      # Step 5: Deploy the container to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: gcr.io/${{ env.PROJECT_ID }}/challenge-api:latest

      # Step 6: Display the Cloud Run service URL (if needed)
      - name: Display Cloud Run Service URL
        run: echo ${{ steps.deploy.outputs.url }}
